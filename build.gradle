plugins {
	id 'java'
	id 'jacoco'
	id 'idea'
	id 'eclipse'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.gorylenko.gradle-git-properties' version '2.5.3'
	id 'com.github.ben-manes.versions' version '0.52.0'
}

group = 'io.pivotal'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21
}

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
	dateFormatTimeZone = "UTC"
	dotGitDirectory = file("${project.rootDir}/.git")
}

jacoco {
	toolVersion = "0.8.13"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

tasks.withType(Test) {
    jvmArgs += [
        "--add-opens", "java.base/java.lang=ALL-UNNAMED",
        "--add-opens", "java.base/java.util=ALL-UNNAMED",
        "--add-opens", "java.base/java.nio=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED",
        "--add-opens", "java.base/java.text=ALL-UNNAMED",
        "--add-opens", "java.desktop/java.awt.font=ALL-UNNAMED",
        "--add-opens", "java.base/java.net=ALL-UNNAMED",
        "--add-opens", "java.base/java.io=ALL-UNNAMED",
        "--add-opens", "java.base/java.time=ALL-UNNAMED",
        "--add-opens", "java.base/java.security=ALL-UNNAMED",
        "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
        "--add-opens", "java.base/sun.security.util=ALL-UNNAMED",
        "--add-opens", "java.base/java.util.concurrent=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang.invoke=ALL-UNNAMED",
        "--add-opens", "java.base/java.nio.charset=ALL-UNNAMED",
        "--add-exports", "java.base/sun.nio.ch=ALL-UNNAMED",
        "-Dnet.bytebuddy.experimental=true"
    ]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-hateoas') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
	}
	implementation('io.projectreactor:reactor-core:3.7.11')
	implementation('org.apache.commons:commons-lang3:3.18.0')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
  testImplementation('org.junit.jupiter:junit-jupiter-params')
  testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
  testImplementation('org.mockito:mockito-core:5.20.0')
  testImplementation('org.mockito:mockito-junit-jupiter:5.20.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
	testImplementation('org.springframework.boot:spring-boot-testcontainers')
	testImplementation('org.testcontainers:cassandra:1.21.3')
	testImplementation('org.testcontainers:junit-jupiter:1.21.3')
	testImplementation('io.projectreactor:reactor-test:3.7.11')
}

bootRun {
	// support passing -Dsystem.property=value to bootRun task
	systemProperties = System.properties
}

check.dependsOn jacocoTestReport
